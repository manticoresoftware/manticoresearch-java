/*
 * Manticore Search Client
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 3.3.1
 * Contact: info@manticoresearch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.manticoresearch.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.manticoresearch.client.model.HighlightField;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Highlight
 */
public class HighlightTest {
    private final Highlight model = new Highlight();

    /**
     * Model tests for Highlight
     */
    @Test
    public void testHighlight() {
        // TODO: test Highlight
    }

    /**
     * Test the property 'fieldnames'
     */
    @Test
    public void fieldnamesTest() {
        // TODO: test fieldnames
    }

    /**
     * Test the property 'fields'
     */
    @Test
    public void fieldsTest() {
        // TODO: test fields
    }

    /**
     * Test the property 'encoder'
     */
    @Test
    public void encoderTest() {
        // TODO: test encoder
    }

    /**
     * Test the property 'highlightQuery'
     */
    @Test
    public void highlightQueryTest() {
        // TODO: test highlightQuery
    }

    /**
     * Test the property 'preTags'
     */
    @Test
    public void preTagsTest() {
        // TODO: test preTags
    }

    /**
     * Test the property 'postTags'
     */
    @Test
    public void postTagsTest() {
        // TODO: test postTags
    }

    /**
     * Test the property 'noMatchSize'
     */
    @Test
    public void noMatchSizeTest() {
        // TODO: test noMatchSize
    }

    /**
     * Test the property 'fragmentSize'
     */
    @Test
    public void fragmentSizeTest() {
        // TODO: test fragmentSize
    }

    /**
     * Test the property 'numberOfFragments'
     */
    @Test
    public void numberOfFragmentsTest() {
        // TODO: test numberOfFragments
    }

    /**
     * Test the property 'limit'
     */
    @Test
    public void limitTest() {
        // TODO: test limit
    }

    /**
     * Test the property 'limitWords'
     */
    @Test
    public void limitWordsTest() {
        // TODO: test limitWords
    }

    /**
     * Test the property 'limitSnippets'
     */
    @Test
    public void limitSnippetsTest() {
        // TODO: test limitSnippets
    }

    /**
     * Test the property 'limitsPerField'
     */
    @Test
    public void limitsPerFieldTest() {
        // TODO: test limitsPerField
    }

    /**
     * Test the property 'useBoundaries'
     */
    @Test
    public void useBoundariesTest() {
        // TODO: test useBoundaries
    }

    /**
     * Test the property 'forceAllWords'
     */
    @Test
    public void forceAllWordsTest() {
        // TODO: test forceAllWords
    }

    /**
     * Test the property 'allowEmpty'
     */
    @Test
    public void allowEmptyTest() {
        // TODO: test allowEmpty
    }

    /**
     * Test the property 'emitZones'
     */
    @Test
    public void emitZonesTest() {
        // TODO: test emitZones
    }

    /**
     * Test the property 'forceSnippets'
     */
    @Test
    public void forceSnippetsTest() {
        // TODO: test forceSnippets
    }

    /**
     * Test the property 'around'
     */
    @Test
    public void aroundTest() {
        // TODO: test around
    }

    /**
     * Test the property 'startSnippetId'
     */
    @Test
    public void startSnippetIdTest() {
        // TODO: test startSnippetId
    }

    /**
     * Test the property 'htmlStripMode'
     */
    @Test
    public void htmlStripModeTest() {
        // TODO: test htmlStripMode
    }

    /**
     * Test the property 'snippetBoundary'
     */
    @Test
    public void snippetBoundaryTest() {
        // TODO: test snippetBoundary
    }

}
