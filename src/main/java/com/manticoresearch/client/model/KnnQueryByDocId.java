/*
 * Manticore Search Client
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 3.3.1
 * Contact: info@manticoresearch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.manticoresearch.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.manticoresearch.client.JSON;


/**
 * Request object for knn search operation
 */
@JsonPropertyOrder({
  KnnQueryByDocId.JSON_PROPERTY_FIELD,
  KnnQueryByDocId.JSON_PROPERTY_DOC_ID,
  KnnQueryByDocId.JSON_PROPERTY_K,
  KnnQueryByDocId.JSON_PROPERTY_FILTER
})
@JsonTypeName("knnQueryByDocId")
@JsonIgnoreProperties(ignoreUnknown = true)
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-22T08:36:02.662182043Z[Etc/UTC]")
public class KnnQueryByDocId {
  public static final String JSON_PROPERTY_FIELD = "field";
  private String field = "";

  public static final String JSON_PROPERTY_DOC_ID = "doc_id";
  private Integer docId;

  public static final String JSON_PROPERTY_K = "k";
  private Integer k;

  public static final String JSON_PROPERTY_FILTER = "filter";
  private Map<String, Object> filter = new HashMap<>();

  public KnnQueryByDocId() { 
  }

  public KnnQueryByDocId field(String field) {
    this.field = field;
    return this;
  }

   /**
   * Get field
   * @return field
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getField() {
    return field;
  }


  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setField(String field) {
    this.field = field;
  }


  public KnnQueryByDocId docId(Integer docId) {
    this.docId = docId;
    return this;
  }

   /**
   * Get docId
   * @return docId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DOC_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDocId() {
    return docId;
  }


  @JsonProperty(JSON_PROPERTY_DOC_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDocId(Integer docId) {
    this.docId = docId;
  }


  public KnnQueryByDocId k(Integer k) {
    this.k = k;
    return this;
  }

   /**
   * Get k
   * @return k
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_K)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getK() {
    return k;
  }


  @JsonProperty(JSON_PROPERTY_K)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setK(Integer k) {
    this.k = k;
  }


  public KnnQueryByDocId filter(Map<String, Object> filter) {
    this.filter = filter;
    return this;
  }

  public KnnQueryByDocId putFilterItem(String key, Object filterItem) {
    if (this.filter == null) {
      this.filter = new HashMap<>();
    }
    this.filter.put(key, filterItem);
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getFilter() {
    return filter;
  }


  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilter(Map<String, Object> filter) {
    this.filter = filter;
  }


  /**
   * Return true if this knnQueryByDocId object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KnnQueryByDocId knnQueryByDocId = (KnnQueryByDocId) o;
    return Objects.equals(this.field, knnQueryByDocId.field) &&
        Objects.equals(this.docId, knnQueryByDocId.docId) &&
        Objects.equals(this.k, knnQueryByDocId.k) &&
        Objects.equals(this.filter, knnQueryByDocId.filter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(field, docId, k, filter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KnnQueryByDocId {\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    docId: ").append(toIndentedString(docId)).append("\n");
    sb.append("    k: ").append(toIndentedString(k)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

