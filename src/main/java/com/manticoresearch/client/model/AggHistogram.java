/*
 * Manticore Search Client
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.manticoresearch.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.manticoresearch.client.JSON;


/**
 * Object to use histograms in aggregation, i.e., grouping search results by histogram values
 */
@JsonPropertyOrder({
  AggHistogram.JSON_PROPERTY_FIELD,
  AggHistogram.JSON_PROPERTY_INTERVAL,
  AggHistogram.JSON_PROPERTY_OFFSET,
  AggHistogram.JSON_PROPERTY_KEYED
})
@JsonTypeName("aggHistogram")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-31T07:57:08.554806755Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class AggHistogram {
  public static final String JSON_PROPERTY_FIELD = "field";
  private String field;

  public static final String JSON_PROPERTY_INTERVAL = "interval";
  private Integer interval;

  public static final String JSON_PROPERTY_OFFSET = "offset";
  private Integer offset;

  public static final String JSON_PROPERTY_KEYED = "keyed";
  private Boolean keyed;

  public AggHistogram() { 
  }

  public AggHistogram field(String field) {
    this.field = field;
    return this;
  }

  /**
   * Field to group by
   * @return field
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getField() {
    return field;
  }


  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setField(String field) {
    this.field = field;
  }


  public AggHistogram interval(Integer interval) {
    this.interval = interval;
    return this;
  }

  /**
   * Interval of the histogram values
   * @return interval
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getInterval() {
    return interval;
  }


  @JsonProperty(JSON_PROPERTY_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInterval(Integer interval) {
    this.interval = interval;
  }


  public AggHistogram offset(Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * Offset of the histogram values. Default value is 0.
   * @return offset
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOffset() {
    return offset;
  }


  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public AggHistogram keyed(Boolean keyed) {
    this.keyed = keyed;
    return this;
  }

  /**
   * Flag that defines if a search response will be a dictionary with the bucket keys. Default value is false.
   * @return keyed
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEYED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getKeyed() {
    return keyed;
  }


  @JsonProperty(JSON_PROPERTY_KEYED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyed(Boolean keyed) {
    this.keyed = keyed;
  }


  /**
   * Return true if this aggHistogram object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggHistogram aggHistogram = (AggHistogram) o;
    return Objects.equals(this.field, aggHistogram.field) &&
        Objects.equals(this.interval, aggHistogram.interval) &&
        Objects.equals(this.offset, aggHistogram.offset) &&
        Objects.equals(this.keyed, aggHistogram.keyed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(field, interval, offset, keyed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggHistogram {\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    keyed: ").append(toIndentedString(keyed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

