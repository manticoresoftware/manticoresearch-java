/*
 * Manticore Search Client
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.manticoresearch.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.manticoresearch.client.JSON;


/**
 * Search hit representing a matched document
 */
@JsonPropertyOrder({
  HitsHits.JSON_PROPERTY_ID,
  HitsHits.JSON_PROPERTY_SCORE,
  HitsHits.JSON_PROPERTY_SOURCE,
  HitsHits.JSON_PROPERTY_KNN_DIST,
  HitsHits.JSON_PROPERTY_HIGHLIGHT,
  HitsHits.JSON_PROPERTY_TABLE,
  HitsHits.JSON_PROPERTY_TYPE,
  HitsHits.JSON_PROPERTY_FIELDS
})
@JsonTypeName("hitsHits")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-26T07:24:06.103497054Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class HitsHits {
  public static final String JSON_PROPERTY_ID = "_id";
  private Long id;

  public static final String JSON_PROPERTY_SCORE = "_score";
  private Integer score;

  public static final String JSON_PROPERTY_SOURCE = "_source";
  private Object source;

  public static final String JSON_PROPERTY_KNN_DIST = "_knn_dist";
  private BigDecimal knnDist;

  public static final String JSON_PROPERTY_HIGHLIGHT = "highlight";
  private Object highlight;

  public static final String JSON_PROPERTY_TABLE = "table";
  private String table;

  public static final String JSON_PROPERTY_TYPE = "_type:";
  private String type;

  public static final String JSON_PROPERTY_FIELDS = "fields";
  private Object fields;

  public HitsHits() { 
  }

  public HitsHits id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * The ID of the matched document
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Long id) {
    this.id = id;
  }


  public HitsHits score(Integer score) {
    this.score = score;
    return this;
  }

  /**
   * The score of the matched document
   * @return score
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getScore() {
    return score;
  }


  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScore(Integer score) {
    this.score = score;
  }


  public HitsHits source(Object source) {
    this.source = source;
    return this;
  }

  /**
   * The source data of the matched document
   * @return source
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(Object source) {
    this.source = source;
  }


  public HitsHits knnDist(BigDecimal knnDist) {
    this.knnDist = knnDist;
    return this;
  }

  /**
   * The knn distance of the matched document returned for knn queries
   * @return knnDist
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KNN_DIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getKnnDist() {
    return knnDist;
  }


  @JsonProperty(JSON_PROPERTY_KNN_DIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKnnDist(BigDecimal knnDist) {
    this.knnDist = knnDist;
  }


  public HitsHits highlight(Object highlight) {
    this.highlight = highlight;
    return this;
  }

  /**
   * The highlighting-related data of the matched document
   * @return highlight
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIGHLIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getHighlight() {
    return highlight;
  }


  @JsonProperty(JSON_PROPERTY_HIGHLIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHighlight(Object highlight) {
    this.highlight = highlight;
  }


  public HitsHits table(String table) {
    this.table = table;
    return this;
  }

  /**
   * The table name of the matched document returned for percolate queries
   * @return table
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTable() {
    return table;
  }


  @JsonProperty(JSON_PROPERTY_TABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTable(String table) {
    this.table = table;
  }


  public HitsHits type(String type) {
    this.type = type;
    return this;
  }

  /**
   * The type of the matched document returned for percolate queries
   * @return type
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public HitsHits fields(Object fields) {
    this.fields = fields;
    return this;
  }

  /**
   * The percolate-related fields of the matched document returned for percolate queries
   * @return fields
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getFields() {
    return fields;
  }


  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFields(Object fields) {
    this.fields = fields;
  }


  /**
   * Return true if this hitsHits object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HitsHits hitsHits = (HitsHits) o;
    return Objects.equals(this.id, hitsHits.id) &&
        Objects.equals(this.score, hitsHits.score) &&
        Objects.equals(this.source, hitsHits.source) &&
        Objects.equals(this.knnDist, hitsHits.knnDist) &&
        Objects.equals(this.highlight, hitsHits.highlight) &&
        Objects.equals(this.table, hitsHits.table) &&
        Objects.equals(this.type, hitsHits.type) &&
        Objects.equals(this.fields, hitsHits.fields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, score, source, knnDist, highlight, table, type, fields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HitsHits {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    knnDist: ").append(toIndentedString(knnDist)).append("\n");
    sb.append("    highlight: ").append(toIndentedString(highlight)).append("\n");
    sb.append("    table: ").append(toIndentedString(table)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

