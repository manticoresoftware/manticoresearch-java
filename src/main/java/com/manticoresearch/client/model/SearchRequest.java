/*
 * Manticore Search Client
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.manticoresearch.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.manticoresearch.client.model.Aggregation;
import com.manticoresearch.client.model.Highlight;
import com.manticoresearch.client.model.Join;
import com.manticoresearch.client.model.KnnQuery;
import com.manticoresearch.client.model.SearchQuery;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.manticoresearch.client.JSON;


/**
 * Request object for search operation
 */
@JsonPropertyOrder({
  SearchRequest.JSON_PROPERTY_INDEX,
  SearchRequest.JSON_PROPERTY_QUERY,
  SearchRequest.JSON_PROPERTY_JOIN,
  SearchRequest.JSON_PROPERTY_HIGHLIGHT,
  SearchRequest.JSON_PROPERTY_LIMIT,
  SearchRequest.JSON_PROPERTY_KNN,
  SearchRequest.JSON_PROPERTY_AGGS,
  SearchRequest.JSON_PROPERTY_EXPRESSIONS,
  SearchRequest.JSON_PROPERTY_MAX_MATCHES,
  SearchRequest.JSON_PROPERTY_OFFSET,
  SearchRequest.JSON_PROPERTY_OPTIONS,
  SearchRequest.JSON_PROPERTY_PROFILE,
  SearchRequest.JSON_PROPERTY_SORT,
  SearchRequest.JSON_PROPERTY_SOURCE,
  SearchRequest.JSON_PROPERTY_TRACK_SCORES
})
@JsonTypeName("searchRequest")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-25T12:46:50.106840837Z[Etc/UTC]", comments = "Generator version: 7.3.0-SNAPSHOT")
public class SearchRequest {
  public static final String JSON_PROPERTY_INDEX = "index";
  private String index;

  public static final String JSON_PROPERTY_QUERY = "query";
  private SearchQuery query;

  public static final String JSON_PROPERTY_JOIN = "join";
  private List<Join> join;

  public static final String JSON_PROPERTY_HIGHLIGHT = "highlight";
  private Highlight highlight;

  public static final String JSON_PROPERTY_LIMIT = "limit";
  private Integer limit;

  public static final String JSON_PROPERTY_KNN = "knn";
  private KnnQuery knn;

  public static final String JSON_PROPERTY_AGGS = "aggs";
  private JsonNullable<Map<String, Aggregation>> aggs = JsonNullable.<Map<String, Aggregation>>undefined();

  public static final String JSON_PROPERTY_EXPRESSIONS = "expressions";
  private JsonNullable<Map<String, String>> expressions = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_MAX_MATCHES = "max_matches";
  private Integer maxMatches;

  public static final String JSON_PROPERTY_OFFSET = "offset";
  private Integer offset;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private Object options;

  public static final String JSON_PROPERTY_PROFILE = "profile";
  private Boolean profile;

  public static final String JSON_PROPERTY_SORT = "sort";
  private JsonNullable<Object> sort = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_SOURCE = "_source";
  private JsonNullable<Object> source = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_TRACK_SCORES = "track_scores";
  private Boolean trackScores;

  public SearchRequest() { 
  }

  public SearchRequest index(String index) {
    this.index = index;
    return this;
  }

  /**
   * The index to perform the search on
   * @return index
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIndex() {
    return index;
  }


  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIndex(String index) {
    this.index = index;
  }


  public SearchRequest query(SearchQuery query) {
    this.query = query;
    return this;
  }

  /**
   * Get query
   * @return query
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SearchQuery getQuery() {
    return query;
  }


  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuery(SearchQuery query) {
    this.query = query;
  }


  public SearchRequest join(List<Join> join) {
    this.join = join;
    return this;
  }

  public SearchRequest addItem(Join joinItem) {
    if (this.join == null) {
      this.join = new ArrayList<>();
    }
    this.join.add(joinItem);
    return this;
  }

  /**
   * Join clause to combine search data from multiple tables
   * @return join
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JOIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Join> getJoin() {
    return join;
  }


  @JsonProperty(JSON_PROPERTY_JOIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJoin(List<Join> join) {
    this.join = join;
  }


  public SearchRequest highlight(Highlight highlight) {
    this.highlight = highlight;
    return this;
  }

  /**
   * Get highlight
   * @return highlight
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIGHLIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Highlight getHighlight() {
    return highlight;
  }


  @JsonProperty(JSON_PROPERTY_HIGHLIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHighlight(Highlight highlight) {
    this.highlight = highlight;
  }


  public SearchRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Maximum number of results to return
   * @return limit
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimit() {
    return limit;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public SearchRequest knn(KnnQuery knn) {
    this.knn = knn;
    return this;
  }

  /**
   * Get knn
   * @return knn
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KNN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public KnnQuery getKnn() {
    return knn;
  }


  @JsonProperty(JSON_PROPERTY_KNN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKnn(KnnQuery knn) {
    this.knn = knn;
  }


  public SearchRequest aggs(Map<String, Aggregation> aggs) {
    this.aggs = JsonNullable.<Map<String, Aggregation>>of(aggs);
    return this;
  }

  /**
   * Defines aggregation settings for grouping results
   * @return aggs
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, Aggregation> getAggs() {
        return aggs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AGGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Aggregation>> getAggs_JsonNullable() {
    return aggs;
  }
  
  @JsonProperty(JSON_PROPERTY_AGGS)
  public void setAggs_JsonNullable(JsonNullable<Map<String, Aggregation>> aggs) {
    this.aggs = aggs;
  }

  public void setAggs(Map<String, Aggregation> aggs) {
    this.aggs = JsonNullable.<Map<String, Aggregation>>of(aggs);
  }


  public SearchRequest expressions(Map<String, String> expressions) {
    this.expressions = JsonNullable.<Map<String, String>>of(expressions);
    return this;
  }

  /**
   * Expressions to calculate additional values for the result
   * @return expressions
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, String> getExpressions() {
        return expressions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPRESSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getExpressions_JsonNullable() {
    return expressions;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPRESSIONS)
  public void setExpressions_JsonNullable(JsonNullable<Map<String, String>> expressions) {
    this.expressions = expressions;
  }

  public void setExpressions(Map<String, String> expressions) {
    this.expressions = JsonNullable.<Map<String, String>>of(expressions);
  }


  public SearchRequest maxMatches(Integer maxMatches) {
    this.maxMatches = maxMatches;
    return this;
  }

  /**
   * Maximum number of matches allowed in the result
   * @return maxMatches
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_MATCHES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxMatches() {
    return maxMatches;
  }


  @JsonProperty(JSON_PROPERTY_MAX_MATCHES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxMatches(Integer maxMatches) {
    this.maxMatches = maxMatches;
  }


  public SearchRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * Starting point for pagination of the result
   * @return offset
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOffset() {
    return offset;
  }


  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public SearchRequest options(Object options) {
    this.options = options;
    return this;
  }

  /**
   * Additional search options
   * @return options
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptions(Object options) {
    this.options = options;
  }


  public SearchRequest profile(Boolean profile) {
    this.profile = profile;
    return this;
  }

  /**
   * Enable or disable profiling of the search request
   * @return profile
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfile(Boolean profile) {
    this.profile = profile;
  }


  public SearchRequest sort(Object sort) {
    this.sort = JsonNullable.<Object>of(sort);
    return this;
  }

  /**
   * Get sort
   * @return sort
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Object getSort() {
        return sort.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSort_JsonNullable() {
    return sort;
  }
  
  @JsonProperty(JSON_PROPERTY_SORT)
  public void setSort_JsonNullable(JsonNullable<Object> sort) {
    this.sort = sort;
  }

  public void setSort(Object sort) {
    this.sort = JsonNullable.<Object>of(sort);
  }


  public SearchRequest source(Object source) {
    this.source = JsonNullable.<Object>of(source);
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Object getSource() {
        return source.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSource_JsonNullable() {
    return source;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE)
  public void setSource_JsonNullable(JsonNullable<Object> source) {
    this.source = source;
  }

  public void setSource(Object source) {
    this.source = JsonNullable.<Object>of(source);
  }


  public SearchRequest trackScores(Boolean trackScores) {
    this.trackScores = trackScores;
    return this;
  }

  /**
   * Enable or disable result weight calculation used for sorting
   * @return trackScores
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACK_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTrackScores() {
    return trackScores;
  }


  @JsonProperty(JSON_PROPERTY_TRACK_SCORES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackScores(Boolean trackScores) {
    this.trackScores = trackScores;
  }


  /**
   * Return true if this searchRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchRequest searchRequest = (SearchRequest) o;
    return Objects.equals(this.index, searchRequest.index) &&
        Objects.equals(this.query, searchRequest.query) &&
        Objects.equals(this.join, searchRequest.join) &&
        Objects.equals(this.highlight, searchRequest.highlight) &&
        Objects.equals(this.limit, searchRequest.limit) &&
        Objects.equals(this.knn, searchRequest.knn) &&
        equalsNullable(this.aggs, searchRequest.aggs) &&
        equalsNullable(this.expressions, searchRequest.expressions) &&
        Objects.equals(this.maxMatches, searchRequest.maxMatches) &&
        Objects.equals(this.offset, searchRequest.offset) &&
        Objects.equals(this.options, searchRequest.options) &&
        Objects.equals(this.profile, searchRequest.profile) &&
        equalsNullable(this.sort, searchRequest.sort) &&
        equalsNullable(this.source, searchRequest.source) &&
        Objects.equals(this.trackScores, searchRequest.trackScores);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(index, query, join, highlight, limit, knn, hashCodeNullable(aggs), hashCodeNullable(expressions), maxMatches, offset, options, profile, hashCodeNullable(sort), hashCodeNullable(source), trackScores);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchRequest {\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    join: ").append(toIndentedString(join)).append("\n");
    sb.append("    highlight: ").append(toIndentedString(highlight)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    knn: ").append(toIndentedString(knn)).append("\n");
    sb.append("    aggs: ").append(toIndentedString(aggs)).append("\n");
    sb.append("    expressions: ").append(toIndentedString(expressions)).append("\n");
    sb.append("    maxMatches: ").append(toIndentedString(maxMatches)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    trackScores: ").append(toIndentedString(trackScores)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

